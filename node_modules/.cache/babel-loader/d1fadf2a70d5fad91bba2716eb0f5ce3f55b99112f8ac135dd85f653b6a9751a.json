{"ast":null,"code":"export const getCurrentMonth = () => {\n  let now = new Date();\n  return `${now.getFullYear()}-${now.getMonth() + 1}`;\n};\nexport const filterListByMonth = (list, date) => {\n  let newList = [];\n  let [year, month] = date.split('-');\n  for (let i in list) {\n    if (list[i].date.getFullYear() === parseInt(year) && list[i].date.getMonth() + 1 === parseInt(month)) {\n      newList.push(list[i]);\n    }\n  }\n  return newList;\n};\nexport const formatDate = date => {\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  let day = date.getDate();\n  return `${addZeroToDate(day)}/${addZeroToDate(month)}/${year}`;\n};\nconst addZeroToDate = n => n < 10 ? `0${n}` : `${n}`;\nexport const formatCurrentMonth = currentMonth => {\n  let [year, month] = currentMonth.split('-');\n  let months = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'Agust', 'September', 'Outubro', 'Novembro', 'Dezembro'];\n  return `${months[parseInt(month) - 1]} de ${year}`;\n};\nexport const newDateAdjusted = dateField => {\n  let [year, month, day] = dateField.split('-');\n  return new Date(parseInt(year), parseInt(month) - 1, parseInt(day));\n};","map":{"version":3,"names":["getCurrentMonth","now","Date","getFullYear","getMonth","filterListByMonth","list","date","newList","year","month","split","i","parseInt","push","formatDate","day","getDate","addZeroToDate","n","formatCurrentMonth","currentMonth","months","newDateAdjusted","dateField"],"sources":["/Users/jennypeverell/Desktop/Dev_Jenny/expense-tracker/src/helpers/dateFilter.ts"],"sourcesContent":["import { Item } from '../types/Item';\n\nexport const getCurrentMonth = () => {\n    let now = new Date();\n    return `${now.getFullYear()}-${now.getMonth()+1}`;\n}\n\nexport const filterListByMonth = (list: Item[], date: string): Item[] => {\n    let newList: Item[] = [];\n    let [year, month] = date.split('-');\n\n    for(let i in list) {\n        if(\n            list[i].date.getFullYear() === parseInt(year) &&\n            (list[i].date.getMonth() + 1) === parseInt(month)\n        ) {\n            newList.push(list[i]);\n        }\n    }\n\n    return newList;\n}\n\nexport const formatDate = (date: Date): string => {\n    let year = date.getFullYear();\n    let month = date.getMonth() + 1;\n    let day = date.getDate();\n\n    return `${addZeroToDate(day)}/${addZeroToDate(month)}/${year}`;\n}\nconst addZeroToDate = (n: number): string => n < 10 ? `0${n}` : `${n}`;\n\nexport const formatCurrentMonth = (currentMonth: string): string => {\n    let [year, month] = currentMonth.split('-');\n    let months = ['January', 'Febuary', 'March', 'April', 'May', 'June', 'July', 'Agust', 'September', 'Outubro', 'Novembro', 'Dezembro'];\n    return `${months[parseInt(month) - 1]} de ${year}`;\n}\n\nexport const newDateAdjusted = (dateField: string) => {\n    let [year, month, day] = dateField.split('-')\n    return new Date(parseInt(year), parseInt(month) - 1, parseInt(day))\n  }"],"mappings":"AAEA,OAAO,MAAMA,eAAe,GAAGA,CAAA,KAAM;EACjC,IAAIC,GAAG,GAAG,IAAIC,IAAI,EAAE;EACpB,OAAQ,GAAED,GAAG,CAACE,WAAW,EAAG,IAAGF,GAAG,CAACG,QAAQ,EAAE,GAAC,CAAE,EAAC;AACrD,CAAC;AAED,OAAO,MAAMC,iBAAiB,GAAGA,CAACC,IAAY,EAAEC,IAAY,KAAa;EACrE,IAAIC,OAAe,GAAG,EAAE;EACxB,IAAI,CAACC,IAAI,EAAEC,KAAK,CAAC,GAAGH,IAAI,CAACI,KAAK,CAAC,GAAG,CAAC;EAEnC,KAAI,IAAIC,CAAC,IAAIN,IAAI,EAAE;IACf,IACIA,IAAI,CAACM,CAAC,CAAC,CAACL,IAAI,CAACJ,WAAW,EAAE,KAAKU,QAAQ,CAACJ,IAAI,CAAC,IAC5CH,IAAI,CAACM,CAAC,CAAC,CAACL,IAAI,CAACH,QAAQ,EAAE,GAAG,CAAC,KAAMS,QAAQ,CAACH,KAAK,CAAC,EACnD;MACEF,OAAO,CAACM,IAAI,CAACR,IAAI,CAACM,CAAC,CAAC,CAAC;IACzB;EACJ;EAEA,OAAOJ,OAAO;AAClB,CAAC;AAED,OAAO,MAAMO,UAAU,GAAIR,IAAU,IAAa;EAC9C,IAAIE,IAAI,GAAGF,IAAI,CAACJ,WAAW,EAAE;EAC7B,IAAIO,KAAK,GAAGH,IAAI,CAACH,QAAQ,EAAE,GAAG,CAAC;EAC/B,IAAIY,GAAG,GAAGT,IAAI,CAACU,OAAO,EAAE;EAExB,OAAQ,GAAEC,aAAa,CAACF,GAAG,CAAE,IAAGE,aAAa,CAACR,KAAK,CAAE,IAAGD,IAAK,EAAC;AAClE,CAAC;AACD,MAAMS,aAAa,GAAIC,CAAS,IAAaA,CAAC,GAAG,EAAE,GAAI,IAAGA,CAAE,EAAC,GAAI,GAAEA,CAAE,EAAC;AAEtE,OAAO,MAAMC,kBAAkB,GAAIC,YAAoB,IAAa;EAChE,IAAI,CAACZ,IAAI,EAAEC,KAAK,CAAC,GAAGW,YAAY,CAACV,KAAK,CAAC,GAAG,CAAC;EAC3C,IAAIW,MAAM,GAAG,CAAC,SAAS,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,KAAK,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,UAAU,CAAC;EACrI,OAAQ,GAAEA,MAAM,CAACT,QAAQ,CAACH,KAAK,CAAC,GAAG,CAAC,CAAE,OAAMD,IAAK,EAAC;AACtD,CAAC;AAED,OAAO,MAAMc,eAAe,GAAIC,SAAiB,IAAK;EAClD,IAAI,CAACf,IAAI,EAAEC,KAAK,EAAEM,GAAG,CAAC,GAAGQ,SAAS,CAACb,KAAK,CAAC,GAAG,CAAC;EAC7C,OAAO,IAAIT,IAAI,CAACW,QAAQ,CAACJ,IAAI,CAAC,EAAEI,QAAQ,CAACH,KAAK,CAAC,GAAG,CAAC,EAAEG,QAAQ,CAACG,GAAG,CAAC,CAAC;AACrE,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}