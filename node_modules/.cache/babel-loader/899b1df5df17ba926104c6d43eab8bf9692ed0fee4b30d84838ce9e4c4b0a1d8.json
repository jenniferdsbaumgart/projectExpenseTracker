{"ast":null,"code":"var _jsxFileName = \"/Users/jennypeverell/Desktop/Dev_Jenny/expense-tracker/src/components/InfoArea/index.tsx\";\nimport * as C from './styles';\nimport { formatCurrentMonth } from '../../helpers/dateFilter';\nimport { ResumeItem } from '../ResumeItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const InfoArea = _ref => {\n  let {\n    currentMonth,\n    onMonthChange,\n    income,\n    expense\n  } = _ref;\n  const handlePrevMonth = () => {\n    let [year, month] = currentMonth.split('-');\n    let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n    currentDate.setMonth(currentDate.getMonth() - 1);\n    onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\n  };\n  const handleNextMonth = () => {\n    let [year, month] = currentMonth.split('-');\n    let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n    currentDate.setMonth(currentDate.getMonth() + 1);\n    onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\n  };\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.MonthArea, {\n      children: [/*#__PURE__*/_jsxDEV(C.MonthArrow, {\n        onClick: handlePrevMonth,\n        children: \"\\u2B05\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(C.MonthTitle, {\n        children: formatCurrentMonth(currentMonth)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(C.MonthArrow, {\n        onClick: handleNextMonth,\n        children: \"\\u27A1\\uFE0F\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(C.ResumeArea, {\n      children: [/*#__PURE__*/_jsxDEV(ResumeItem, {\n        title: \"Income\",\n        value: income\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResumeItem, {\n        title: \"Despesas\",\n        value: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ResumeItem, {\n        title: \"Balan\\xE7o\",\n        value: income - expense,\n        color: income - expense < 0 ? 'red' : 'green'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_c = InfoArea;\nvar _c;\n$RefreshReg$(_c, \"InfoArea\");","map":{"version":3,"names":["C","formatCurrentMonth","ResumeItem","jsxDEV","_jsxDEV","InfoArea","_ref","currentMonth","onMonthChange","income","expense","handlePrevMonth","year","month","split","currentDate","Date","parseInt","setMonth","getMonth","getFullYear","handleNextMonth","Container","children","MonthArea","MonthArrow","onClick","fileName","_jsxFileName","lineNumber","columnNumber","MonthTitle","ResumeArea","title","value","color","_c","$RefreshReg$"],"sources":["/Users/jennypeverell/Desktop/Dev_Jenny/expense-tracker/src/components/InfoArea/index.tsx"],"sourcesContent":["import * as C from './styles';\nimport { formatCurrentMonth } from '../../helpers/dateFilter';\nimport { ResumeItem } from '../ResumeItem';\n\ntype Props = {\n    currentMonth: string;\n    onMonthChange: (newMonth: string) => void;\n    income: number;\n    expense: number;\n}\n\nexport const InfoArea = ({ currentMonth, onMonthChange, income, expense }: Props) => {\n    \n    const handlePrevMonth = () => {\n        let [year, month] = currentMonth.split('-');\n        let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n        currentDate.setMonth( currentDate.getMonth() - 1 );\n        onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\n    }\n\n    const handleNextMonth = () => {\n        let [year, month] = currentMonth.split('-');\n        let currentDate = new Date(parseInt(year), parseInt(month) - 1, 1);\n        currentDate.setMonth( currentDate.getMonth() + 1 );\n        onMonthChange(`${currentDate.getFullYear()}-${currentDate.getMonth() + 1}`);\n    }\n\n    return (\n        <C.Container>\n            <C.MonthArea>\n                <C.MonthArrow onClick={handlePrevMonth}>⬅️</C.MonthArrow>\n                <C.MonthTitle>{formatCurrentMonth(currentMonth)}</C.MonthTitle>\n                <C.MonthArrow onClick={handleNextMonth}>➡️</C.MonthArrow>\n            </C.MonthArea>\n            <C.ResumeArea>\n                <ResumeItem title=\"Income\" value={income} />\n                <ResumeItem title=\"Despesas\" value={expense} />\n                <ResumeItem\n                    title=\"Balanço\"\n                    value={income - expense}\n                    color={(income-expense) < 0 ? 'red' : 'green'}\n                />\n            </C.ResumeArea>\n        </C.Container>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}