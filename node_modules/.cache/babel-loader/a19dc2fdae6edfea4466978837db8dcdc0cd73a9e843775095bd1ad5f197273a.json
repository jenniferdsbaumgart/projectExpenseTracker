{"ast":null,"code":"var _jsxFileName = \"/Users/jennypeverell/Desktop/Dev_Jenny/expense-tracker/src/App.tsx\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport * as C from './App.styles';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/TableArea';\nimport { InfoArea } from './components/InfoArea';\nimport { InputArea } from './components/InputArea';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [list, setList] = useState(items);\n  const [filteredList, setFilteredList] = useState([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n  useEffect(() => {\n    setFilteredList(filterListByMonth(list, currentMonth));\n  }, [list, currentMonth]);\n  useEffect(() => {\n    let incomeCount = 0;\n    let expenseCount = 0;\n    for (let i in filteredList) {\n      if (categories[filteredList[i].category].expense) {\n        expenseCount += filteredList[i].value;\n      } else {\n        incomeCount += filteredList[i].value;\n      }\n    }\n    setIncome(incomeCount);\n    setExpense(expenseCount);\n  }, [filteredList]);\n  const handleMonthChange = newMonth => {\n    setCurrentMonth(newMonth);\n  };\n  const handleAddItem = item => {\n    let newList = [...list];\n    newList.push(item);\n    setList(newList);\n  };\n  return /*#__PURE__*/_jsxDEV(C.Container, {\n    children: [/*#__PURE__*/_jsxDEV(C.Header, {\n      children: /*#__PURE__*/_jsxDEV(C.HeaderText, {\n        children: \"Sistema Financeiro\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(C.Body, {\n      children: [/*#__PURE__*/_jsxDEV(InfoArea, {\n        currentMonth: currentMonth,\n        onMonthChange: handleMonthChange,\n        income: income,\n        expense: expense\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(InputArea, {\n        onAdd: handleAddItem\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableArea, {\n        list: filteredList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"iDo0GUT5sJXJH9SDeWU0xjYbiB0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","C","categories","items","getCurrentMonth","filterListByMonth","TableArea","InfoArea","InputArea","jsxDEV","_jsxDEV","App","_s","list","setList","filteredList","setFilteredList","currentMonth","setCurrentMonth","income","setIncome","expense","setExpense","incomeCount","expenseCount","i","category","value","handleMonthChange","newMonth","handleAddItem","item","newList","push","Container","children","Header","HeaderText","fileName","_jsxFileName","lineNumber","columnNumber","Body","onMonthChange","onAdd","_c","$RefreshReg$"],"sources":["/Users/jennypeverell/Desktop/Dev_Jenny/expense-tracker/src/App.tsx"],"sourcesContent":["import { useState, useEffect } from 'react';\nimport * as C from './App.styles';\nimport { Item } from './types/Item';\nimport { categories } from './data/categories';\nimport { items } from './data/items';\nimport { getCurrentMonth, filterListByMonth } from './helpers/dateFilter';\nimport { TableArea } from './components/TableArea';\nimport { InfoArea } from './components/InfoArea';\nimport { InputArea } from './components/InputArea';\n\nconst App = () => {\n  const [list, setList] = useState(items);\n  const [filteredList, setFilteredList] = useState<Item[]>([]);\n  const [currentMonth, setCurrentMonth] = useState(getCurrentMonth());\n  const [income, setIncome] = useState(0);\n  const [expense, setExpense] = useState(0);\n\n  useEffect(()=>{\n    setFilteredList( filterListByMonth(list, currentMonth) );\n  }, [list, currentMonth]);\n\n  useEffect(()=>{\n    let incomeCount = 0;\n    let expenseCount = 0;\n\n    for(let i in filteredList) {\n      if(categories[filteredList[i].category].expense) {\n        expenseCount += filteredList[i].value;\n      } else {\n        incomeCount += filteredList[i].value;\n      }\n    }\n\n    setIncome(incomeCount);\n    setExpense(expenseCount);\n  }, [filteredList]);\n\n  const handleMonthChange = (newMonth: string) => {\n    setCurrentMonth(newMonth);\n  }\n\n  const handleAddItem = (item: Item) => {\n    let newList = [...list];\n    newList.push(item);\n    setList(newList);\n  }\n\n  return (\n    <C.Container>\n      <C.Header>\n        <C.HeaderText>Sistema Financeiro</C.HeaderText>\n      </C.Header>\n      <C.Body>\n        \n        <InfoArea\n          currentMonth={currentMonth}\n          onMonthChange={handleMonthChange}\n          income={income}\n          expense={expense}\n        />\n\n        <InputArea onAdd={handleAddItem} />\n\n        <TableArea list={filteredList} />\n\n      </C.Body>\n    </C.Container>\n  );\n}\n\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}